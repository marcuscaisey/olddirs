*olddirs.nvim*
olddirs.nvim is like |:oldfiles|, but for directories.

================================================================================
Table of Contents                                             *olddirs-contents*

INTRODUCTION·····················································|olddirs-intro|
OLDDIRS································································|olddirs|
TELESCOPE····················································|olddirs-telescope|

================================================================================
INTRODUCTION                                                     *olddirs-intro*

olddirs.nvim provides |autocommand|s which store the current directory in an
olddirs file when Neovim starts or the directory is changed with |:cd|,
|:lcd|, or |:tcd|. The old directories can be retrieved as a list of strings
or through a |telescope.nvim| picker.

================================================================================
OLDDIRS                                                                *olddirs*

OlddirsConfig                                                    *OlddirsConfig*

    Fields: ~
        {file} (string) File to store the old directories in.
        {limit} (number) Max number of directories to store in the olddirs file.


olddirs.setup({opts})                                            *olddirs.setup*
    Configures olddirs.nvim.
    This is only required if you want to change the defaults which are shown
    below.

    Parameters: ~
        {opts} (OlddirsConfig)

    Usage: ~
>lua
        local olddirs = require('olddirs')
        olddirs.setup({
          file = vim.fn.stdpath('data') .. '/olddirs',
          limit = 100,
        })
<


olddirs.get()                                                      *olddirs.get*
    Returns the directories from the olddirs file if it exists, otherwise an
    empty table.

    Returns: ~
        (string[]) directories in most recently used order

    Usage: ~
>lua
        local olddirs = require('olddirs')
        vim.pretty_print(olddirs.get())
<


================================================================================
TELESCOPE                                                    *olddirs-telescope*

Old directories can also be accessed through the |telescope.nvim| picker. To
do so, you must first load the extension:
>lua
  telescope.load_extension('olddirs')
<

To open the picker, call `telescope.extensions.olddirs.picker({opts})`.
`{opts}` can include regular Telescope options like `layout_config` and
`path_display`.

Example mapping:
>lua
  vim.keymap.set('n', '<leader>od', telescope.extensions.olddirs.picker)
<

To configure the picker, include the configuration in a call to
`telescope.setup({opts})`:
>lua
  telescope.setup({
    extensions = {
      olddirs = {
        path_callback = vim.cmd.lcd,
        ...
      },
    },
  })
<
`path_callback({path})` is the function which will be called with the selected
directory.

The above configuration is the default, so if you're happy with it then
there's no need to include it in a call to `telescope.setup({opts})`.


You can also provide any generic picker config in this section. For example:
>lua
  telescope.setup({
    extensions = {
      olddirs = {
        path_callback = vim.cmd.cd,
        layout_config = {
          width = 0.6,
          height = 0.9,
        },
        previewer = false,
        path_display = function(_, path)
          return path:gsub('^' .. os.getenv('HOME'), '~')
        end,
      },
    },
  })
<

vim:tw=78:ts=8:noet:ft=help:norl:
