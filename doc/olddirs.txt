*olddirs.nvim*
olddirs.nvim is like |:oldfiles|, but for directories.

================================================================================
Table of Contents                                             *olddirs-contents*

INTRODUCTION·····················································|olddirs-intro|
OLDDIRS································································|olddirs|
TELESCOPE····················································|olddirs-telescope|

================================================================================
INTRODUCTION                                                     *olddirs-intro*

olddirs.nvim provides implementations of |:cd|, |:lcd|, and |:tcd| which store
the directories in an olddirs file which can be retrieved later either as a
list of strings or through a |telescope.nvim| picker.

================================================================================
OLDDIRS                                                                *olddirs*

The olddirs.nvim Lua API can be accessed by importing the `oldirs` module with
>lua
  local olddirs = require('olddirs')
<

olddirs.setup({opts})                                            *olddirs.setup*
    Configure olddirs.nvim. This is only required if you want to change the
    defaults.

    Parameters: ~
        {opts} (table) options
          * {file} (string): file to store the olddirs in
            Default: stdpath('data') .. '/olddirs'
          * {limit} (number): max number of dirs to store in the olddirs file
            Default: 100


olddirs.cd({path})                                                  *olddirs.cd*
    Wrapper around |:cd| which saves {path} to the olddirs file.

    Parameters: ~
        {path} (string) The target directory.


olddirs.lcd({path})                                                *olddirs.lcd*
    Wrapper around |:lcd| which saves {path} to the olddirs file.

    Parameters: ~
        {path} (string) The target directory.


olddirs.tcd({path})                                                *olddirs.tcd*
    Wrapper around |:tcd| which saves {path} to the olddirs file.

    Parameters: ~
        {path} (string) The target directory.


olddirs.get()                                                      *olddirs.get*
    Returns the directories from the olddirs file if it exists, otherwise an
    empty table.

    Returns: ~
        (table) directories in most recently used order.


================================================================================
TELESCOPE                                                    *olddirs-telescope*

Old directories can also be accessed through the |telescope.nvim| picker. To
do so, you must first load the extension:
>lua
  telescope.load_extension('olddirs')
<

To open the picker, call `telescope.extensions.olddirs.picker({opts})`. `opts`
can include generic Telescope picker options.

Example mapping:
>lua
  vim.keymap.set('n', '<leader>od', telescope.extensions.olddirs.picker)
<

To configure the picker, include the configuration in a call to
`telescope.setup({opts})`:
>lua
  telescope.setup({
    extensions = {
      olddirs = {
        path_callback = olddirs.lcd,
        ...
      },
    },
  })
<
`path_callback({path})` is the function which will be called with the selected
directory.

This above configuration is the default, so if you're happy with it then
there's no need to include it in a call to `telescope.setup({opts})`.


You can also provide any generic picker config in this section. For example:
>lua
  telescope.setup({
    extensions = {
      olddirs = {
        path_callback = olddirs.cd,
        layout_config = {
          width = 0.6,
          height = 0.9,
        },
        previewer = false,
        path_display = function(_, path)
          return path:gsub('^' .. os.getenv('HOME'), '~')
        end,
      },
    },
  })
<

vim:tw=78:ts=8:noet:ft=help:norl:
